//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.1432.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ProfileService", Namespace="http://asp.net/ApplicationServices/v200")]
public partial class ProfileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback GetPropertiesForCurrentUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetAllPropertiesForCurrentUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback SetPropertiesForCurrentUserOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPropertiesMetadataOperationCompleted;
    
    /// <remarks/>
    public ProfileService() {
        string urlSetting = System.Configuration.ConfigurationManager.AppSettings["ProfileServiceAddress"];
        if ((urlSetting != null))
        {
            this.Url = urlSetting;
        }
        else
        {
            this.Url = "http://localhost:49299/AuthWCF/ProfileService.svc";
        }        
    }
    
    /// <remarks/>
    public event GetPropertiesForCurrentUserCompletedEventHandler GetPropertiesForCurrentUserCompleted;
    
    /// <remarks/>
    public event GetAllPropertiesForCurrentUserCompletedEventHandler GetAllPropertiesForCurrentUserCompleted;
    
    /// <remarks/>
    public event SetPropertiesForCurrentUserCompletedEventHandler SetPropertiesForCurrentUserCompleted;
    
    /// <remarks/>
    public event GetPropertiesMetadataCompletedEventHandler GetPropertiesMetadataCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asp.net/ApplicationServices/v200/ProfileService/GetPropertiesForCurrentUse" +
        "r", RequestNamespace="http://asp.net/ApplicationServices/v200", ResponseNamespace="http://asp.net/ApplicationServices/v200", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringanyType", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
    public ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] GetPropertiesForCurrentUser([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] properties, bool authenticatedUserOnly, [System.Xml.Serialization.XmlIgnoreAttribute()] bool authenticatedUserOnlySpecified) {
        object[] results = this.Invoke("GetPropertiesForCurrentUser", new object[] {
                    properties,
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified});
        return ((ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPropertiesForCurrentUser(string[] properties, bool authenticatedUserOnly, bool authenticatedUserOnlySpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPropertiesForCurrentUser", new object[] {
                    properties,
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] EndGetPropertiesForCurrentUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[])(results[0]));
    }
    
    /// <remarks/>
    public void GetPropertiesForCurrentUserAsync(string[] properties, bool authenticatedUserOnly, bool authenticatedUserOnlySpecified) {
        this.GetPropertiesForCurrentUserAsync(properties, authenticatedUserOnly, authenticatedUserOnlySpecified, null);
    }
    
    /// <remarks/>
    public void GetPropertiesForCurrentUserAsync(string[] properties, bool authenticatedUserOnly, bool authenticatedUserOnlySpecified, object userState) {
        if ((this.GetPropertiesForCurrentUserOperationCompleted == null)) {
            this.GetPropertiesForCurrentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesForCurrentUserOperationCompleted);
        }
        this.InvokeAsync("GetPropertiesForCurrentUser", new object[] {
                    properties,
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified}, this.GetPropertiesForCurrentUserOperationCompleted, userState);
    }
    
    private void OnGetPropertiesForCurrentUserOperationCompleted(object arg) {
        if ((this.GetPropertiesForCurrentUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPropertiesForCurrentUserCompleted(this, new GetPropertiesForCurrentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asp.net/ApplicationServices/v200/ProfileService/GetAllPropertiesForCurrent" +
        "User", RequestNamespace="http://asp.net/ApplicationServices/v200", ResponseNamespace="http://asp.net/ApplicationServices/v200", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringanyType", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
    public ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] GetAllPropertiesForCurrentUser(bool authenticatedUserOnly, [System.Xml.Serialization.XmlIgnoreAttribute()] bool authenticatedUserOnlySpecified) {
        object[] results = this.Invoke("GetAllPropertiesForCurrentUser", new object[] {
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified});
        return ((ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetAllPropertiesForCurrentUser(bool authenticatedUserOnly, bool authenticatedUserOnlySpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetAllPropertiesForCurrentUser", new object[] {
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] EndGetAllPropertiesForCurrentUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[])(results[0]));
    }
    
    /// <remarks/>
    public void GetAllPropertiesForCurrentUserAsync(bool authenticatedUserOnly, bool authenticatedUserOnlySpecified) {
        this.GetAllPropertiesForCurrentUserAsync(authenticatedUserOnly, authenticatedUserOnlySpecified, null);
    }
    
    /// <remarks/>
    public void GetAllPropertiesForCurrentUserAsync(bool authenticatedUserOnly, bool authenticatedUserOnlySpecified, object userState) {
        if ((this.GetAllPropertiesForCurrentUserOperationCompleted == null)) {
            this.GetAllPropertiesForCurrentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPropertiesForCurrentUserOperationCompleted);
        }
        this.InvokeAsync("GetAllPropertiesForCurrentUser", new object[] {
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified}, this.GetAllPropertiesForCurrentUserOperationCompleted, userState);
    }
    
    private void OnGetAllPropertiesForCurrentUserOperationCompleted(object arg) {
        if ((this.GetAllPropertiesForCurrentUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAllPropertiesForCurrentUserCompleted(this, new GetAllPropertiesForCurrentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asp.net/ApplicationServices/v200/ProfileService/SetPropertiesForCurrentUse" +
        "r", RequestNamespace="http://asp.net/ApplicationServices/v200", ResponseNamespace="http://asp.net/ApplicationServices/v200", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
    public string[] SetPropertiesForCurrentUser([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringanyType", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)] ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] values, bool authenticatedUserOnly, [System.Xml.Serialization.XmlIgnoreAttribute()] bool authenticatedUserOnlySpecified) {
        object[] results = this.Invoke("SetPropertiesForCurrentUser", new object[] {
                    values,
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginSetPropertiesForCurrentUser(ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] values, bool authenticatedUserOnly, bool authenticatedUserOnlySpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SetPropertiesForCurrentUser", new object[] {
                    values,
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndSetPropertiesForCurrentUser(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void SetPropertiesForCurrentUserAsync(ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] values, bool authenticatedUserOnly, bool authenticatedUserOnlySpecified) {
        this.SetPropertiesForCurrentUserAsync(values, authenticatedUserOnly, authenticatedUserOnlySpecified, null);
    }
    
    /// <remarks/>
    public void SetPropertiesForCurrentUserAsync(ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] values, bool authenticatedUserOnly, bool authenticatedUserOnlySpecified, object userState) {
        if ((this.SetPropertiesForCurrentUserOperationCompleted == null)) {
            this.SetPropertiesForCurrentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPropertiesForCurrentUserOperationCompleted);
        }
        this.InvokeAsync("SetPropertiesForCurrentUser", new object[] {
                    values,
                    authenticatedUserOnly,
                    authenticatedUserOnlySpecified}, this.SetPropertiesForCurrentUserOperationCompleted, userState);
    }
    
    private void OnSetPropertiesForCurrentUserOperationCompleted(object arg) {
        if ((this.SetPropertiesForCurrentUserCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SetPropertiesForCurrentUserCompleted(this, new SetPropertiesForCurrentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://asp.net/ApplicationServices/v200/ProfileService/GetPropertiesMetadata", RequestNamespace="http://asp.net/ApplicationServices/v200", ResponseNamespace="http://asp.net/ApplicationServices/v200", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
    [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Web.ApplicationServices")]
    public ProfilePropertyMetadata[] GetPropertiesMetadata() {
        object[] results = this.Invoke("GetPropertiesMetadata", new object[0]);
        return ((ProfilePropertyMetadata[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPropertiesMetadata(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPropertiesMetadata", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public ProfilePropertyMetadata[] EndGetPropertiesMetadata(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ProfilePropertyMetadata[])(results[0]));
    }
    
    /// <remarks/>
    public void GetPropertiesMetadataAsync() {
        this.GetPropertiesMetadataAsync(null);
    }
    
    /// <remarks/>
    public void GetPropertiesMetadataAsync(object userState) {
        if ((this.GetPropertiesMetadataOperationCompleted == null)) {
            this.GetPropertiesMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertiesMetadataOperationCompleted);
        }
        this.InvokeAsync("GetPropertiesMetadata", new object[0], this.GetPropertiesMetadataOperationCompleted, userState);
    }
    
    private void OnGetPropertiesMetadataOperationCompleted(object arg) {
        if ((this.GetPropertiesMetadataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPropertiesMetadataCompleted(this, new GetPropertiesMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
public partial class ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType {
    
    private string keyField;
    
    private object valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string Key {
        get {
            return this.keyField;
        }
        set {
            this.keyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public object Value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Web.ApplicationServices")]
public partial class ProfilePropertyMetadata {
    
    private bool allowAnonymousAccessField;
    
    private bool allowAnonymousAccessFieldSpecified;
    
    private string defaultValueField;
    
    private bool isReadOnlyField;
    
    private bool isReadOnlyFieldSpecified;
    
    private string propertyNameField;
    
    private int serializeAsField;
    
    private bool serializeAsFieldSpecified;
    
    private string typeNameField;
    
    /// <remarks/>
    public bool AllowAnonymousAccess {
        get {
            return this.allowAnonymousAccessField;
        }
        set {
            this.allowAnonymousAccessField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool AllowAnonymousAccessSpecified {
        get {
            return this.allowAnonymousAccessFieldSpecified;
        }
        set {
            this.allowAnonymousAccessFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string DefaultValue {
        get {
            return this.defaultValueField;
        }
        set {
            this.defaultValueField = value;
        }
    }
    
    /// <remarks/>
    public bool IsReadOnly {
        get {
            return this.isReadOnlyField;
        }
        set {
            this.isReadOnlyField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool IsReadOnlySpecified {
        get {
            return this.isReadOnlyFieldSpecified;
        }
        set {
            this.isReadOnlyFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string PropertyName {
        get {
            return this.propertyNameField;
        }
        set {
            this.propertyNameField = value;
        }
    }
    
    /// <remarks/>
    public int SerializeAs {
        get {
            return this.serializeAsField;
        }
        set {
            this.serializeAsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool SerializeAsSpecified {
        get {
            return this.serializeAsFieldSpecified;
        }
        set {
            this.serializeAsFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string TypeName {
        get {
            return this.typeNameField;
        }
        set {
            this.typeNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetPropertiesForCurrentUserCompletedEventHandler(object sender, GetPropertiesForCurrentUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPropertiesForCurrentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPropertiesForCurrentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetAllPropertiesForCurrentUserCompletedEventHandler(object sender, GetAllPropertiesForCurrentUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAllPropertiesForCurrentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetAllPropertiesForCurrentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArrayOfKeyValueOfstringanyTypeKeyValueOfstringanyType[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void SetPropertiesForCurrentUserCompletedEventHandler(object sender, SetPropertiesForCurrentUserCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SetPropertiesForCurrentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal SetPropertiesForCurrentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
public delegate void GetPropertiesMetadataCompletedEventHandler(object sender, GetPropertiesMetadataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPropertiesMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPropertiesMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ProfilePropertyMetadata[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ProfilePropertyMetadata[])(this.results[0]));
        }
    }
}
